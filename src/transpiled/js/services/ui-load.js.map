{"version":3,"sources":["../../../js/services/ui-load.js"],"names":[],"mappings":"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","file":"src/js/services/ui-load.js","sourcesContent":["'use strict';\n\n/**\n * 0.1.1\n * Deferred load js/css file, used for ui-jq.js and Lazy Loading.\n *\n * @ flatfull.com All Rights Reserved.\n * Author url: http://themeforest.net/user/flatfull\n */\n\nangular.module('ui.load', [])\n\t.service('uiLoad', ['$document', '$q', '$timeout', function ($document, $q, $timeout) {\n\n\t\tvar loaded = [];\n\t\tvar promise = false;\n\t\tvar deferred = $q.defer();\n\n\t\t/**\n\t\t * Chain loads the given sources\n\t\t * @param srcs array, script or css\n\t\t * @returns {*} Promise that will be resolved once the sources has been loaded.\n\t\t */\n\t\tthis.load = function (srcs) {\n\t\t\tsrcs = angular.isArray(srcs) ? srcs : srcs.split(/\\s+/);\n\t\t\tvar self = this;\n\t\t\tif(!promise){\n\t\t\t\tpromise = deferred.promise;\n\t\t\t}\n      angular.forEach(srcs, function(src) {\n      \tpromise = promise.then( function(){\n      \t\treturn src.indexOf('.css') >=0 ? self.loadCSS(src) : self.loadScript(src);\n      \t} );\n      });\n      deferred.resolve();\n      return promise;\n\t\t}\n\n\t\t/**\n\t\t * Dynamically loads the given script\n\t\t * @param src The url of the script to load dynamically\n\t\t * @returns {*} Promise that will be resolved once the script has been loaded.\n\t\t */\n\t\tthis.loadScript = function (src) {\n\t\t\tif(loaded[src]) return loaded[src].promise;\n\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar script = $document[0].createElement('script');\n\t\t\tscript.src = src;\n\t\t\tscript.onload = function (e) {\n\t\t\t\t$timeout(function () {\n\t\t\t\t\tdeferred.resolve(e);\n\t\t\t\t});\n\t\t\t};\n\t\t\tscript.onerror = function (e) {\n\t\t\t\t$timeout(function () {\n\t\t\t\t\tdeferred.reject(e);\n\t\t\t\t});\n\t\t\t};\n\t\t\t$document[0].body.appendChild(script);\n\t\t\tloaded[src] = deferred;\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\t/**\n\t\t * Dynamically loads the given CSS file\n\t\t * @param href The url of the CSS to load dynamically\n\t\t * @returns {*} Promise that will be resolved once the CSS file has been loaded.\n\t\t */\n\t\tthis.loadCSS = function (href) {\n\t\t\tif(loaded[href]) return loaded[href].promise;\n\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar style = $document[0].createElement('link');\n\t\t\tstyle.rel = 'stylesheet';\n\t\t\tstyle.type = 'text/css';\n\t\t\tstyle.href = href;\n\t\t\tstyle.onload = function (e) {\n\t\t\t\t$timeout(function () {\n\t\t\t\t\tdeferred.resolve(e);\n\t\t\t\t});\n\t\t\t};\n\t\t\tstyle.onerror = function (e) {\n\t\t\t\t$timeout(function () {\n\t\t\t\t\tdeferred.reject(e);\n\t\t\t\t});\n\t\t\t};\n\t\t\t$document[0].head.appendChild(style);\n\t\t\tloaded[href] = deferred;\n\n\t\t\treturn deferred.promise;\n\t\t};\n}]);\n"]}