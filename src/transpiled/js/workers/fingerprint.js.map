{"version":3,"sources":["../../../js/workers/fingerprint.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAgBA,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,UAAS,CAAC,EAAE;;AAE3C,OAAK,CAAC,CAAC,CAAC,IAAI,EAAE,UAAS,GAAG,EAAE;AAC1B,QAAI,MAAM,GAAG,GAAG,CAAC,YAAY,CAAC;;AAE9B,QAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;;AAEhC,cAAU,CAAC,YAAW;AAAE,cAAQ,EAAE,CAAC;KAAE,EAAE,IAAI,CAAC,CAAC;;AAE7C,aAAS,QAAQ,GAAE;AACjB,UAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;KAC1C;GACF,CAAC,CAAC;CAEJ,EAAE,KAAK,CAAC,CAAC;;;AAIR,SAAS,KAAK,CAAC,GAAG,EAAE,QAAQ,EAAE;AAC5B,MAAI,GAAG,CAAC;;;;AAIR,MAAG,OAAO,cAAc,KAAK,WAAW,EAAE,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC,KAChE;AACH,QAAI,QAAQ,GAAG,CAAC,oBAAoB,EAC5B,oBAAoB,EAClB,oBAAoB,EACpB,oBAAoB,EACtB,mBAAmB,CAAC,CAAA;;AAE3B,SAAI,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AACnD,UAAI;AACF,WAAG,GAAG,IAAI,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,cAAM;OACP,CACD,OAAM,CAAC,EAAC,EAAE;KACV;AAAA,GACH;;AAED,KAAG,CAAC,kBAAkB,GAAG,eAAe,CAAC;;AAEzC,WAAS,eAAe,GAAG;AACzB,QAAG,GAAG,CAAC,UAAU,GAAG,CAAC,EAAE;AACrB,aAAO;KACR;;AAED,QAAG,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;AACrB,aAAO;KACR;;;AAGD,QAAG,GAAG,CAAC,UAAU,KAAK,CAAC,EAAE;AACvB,cAAQ,CAAC,GAAG,CAAC,CAAC;KACf;GACF;;AAED,KAAG,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;AAC3B,KAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;CACd","file":"src/js/workers/fingerprint.js","sourcesContent":["// self.addEventListener('message', function(e) {\n//   var data = e.data;\n//   switch (data.cmd) {\n//     case 'start':\n//       self.postMessage('WORKER STARTED: ' + data.msg);\n//       break;\n//     case 'stop':\n//       self.postMessage('WORKER STOPPED: ' + data.msg +\n//                        '. (buttons will no longer work)');\n//       self.close(); // Terminates the worker.\n//       break;\n//     default:\n//       self.postMessage('Unknown command: ' + data.msg);\n//   };\n// }, false);\n\nself.addEventListener('message', function(e) {\n\n  fetch(e.data, function(xhr) {\n    var result = xhr.responseText;\n    //process the JSON\n    var object = JSON.parse(result);\n    //set a timeout just to add some latency\n    setTimeout(function() { sendback(); }, 2000);\n    //pass JSON object back as string\n    function sendback(){\n      self.postMessage(JSON.stringify(object));\n    }\n  });\n\n}, false);\n\n\n  //simple XHR request in pure raw JavaScript\n  function fetch(url, callback) {\n    var xhr;\n\n    //console.log(url);\n\n    if(typeof XMLHttpRequest !== 'undefined') xhr = new XMLHttpRequest();\n    else {\n      var versions = [\"MSXML2.XmlHttp.5.0\",\n              \"MSXML2.XmlHttp.4.0\",\n                \"MSXML2.XmlHttp.3.0\",\n                \"MSXML2.XmlHttp.2.0\",\n              \"Microsoft.XmlHttp\"]\n\n       for(var i = 0, len = versions.length; i < len; i++) {\n        try {\n          xhr = new ActiveXObject(versions[i]);\n          break;\n        }\n        catch(e){}\n       } // end for\n    }\n\n    xhr.onreadystatechange = ensureReadiness;\n\n    function ensureReadiness() {\n      if(xhr.readyState < 4) {\n        return;\n      }\n\n      if(xhr.status !== 200) {\n        return;\n      }\n\n      // all is well\n      if(xhr.readyState === 4) {\n        callback(xhr);\n      }\n    }\n\n    xhr.open('GET', url, true);\n    xhr.send('');\n  }\n"]}