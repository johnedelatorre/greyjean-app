{"version":3,"sources":["../../../js/controllers/signin.js"],"names":[],"mappings":"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","file":"signin.js","sourcesContent":["'use strict';\n\n// signin controller\napp.controller('SigninFormController',  ['$scope', '$rootScope', 'Auth', 'Fingerprint', 'Offer', 'Campaign', 'Product', '$filter', '$state', 'locker', 'Cause', 'Store', 'Beacon','Analytics','$cookies',\n    function(                             $scope,   $rootScope,   Auth,   Fingerprint,   Offer,   Campaign,   Product,   $filter,   $state,   locker, Cause, Store, Beacon,Analytics,$cookies) {\n\n      $scope.toggleWizardLoader = {\n        showLoader: false\n      }\n\n      $scope.login = () => {\n        $scope.toggleWizardLoader.showLoader = true;\n        let merchantCreds = {\n          email    : $scope.user.email,\n          password : $scope.user.password\n        }\n\n        Auth.login(merchantCreds).then(function(response) {\n          let statusCode    = response.FlikResponse.Status.StatusCode;\n          let statusMessage = response.FlikResponse.Status.StatusMessage;\n          if (statusCode == 0) {\n            let merchantToken = response.FlikResponse.Data.MerchantToken.Token;\n            locker.driver('local')\n              .namespace('core')\n              .put('merchantToken', merchantToken);\n            //console.info('this is merchantToken ' +merchantToken);\n            Auth.getMe(merchantToken).then(response => {\n              if (statusCode == 0) {\n              let me = response.FlikResponse.Data.Merchant.Me;\n              //console.info('this is me ' + JSON.stringify(me, null, 4));\n              let merchantInfo = {\n                merchantId     : me.merchantId,\n                loginId        : me.loginId,\n                email          : me.email,\n                firstName      : me.firstName,\n                lastName       : me.lastName,\n                mobileNo       : me.mobileNo,\n                applicationKey : me.applicationKey,\n                developerKey   : me.developerKey\n              }\n              console.warn('and the status is on get me is '+statusCode);\n              locker.driver('local')\n                .namespace('core')\n                .put('me', merchantInfo);\n\n              let mPass = {\n                MerchantToken: merchantToken\n              }\n                  //console.log(\"the token is\"+merchantToken);\n                  //$cookies.merchantToken = merchantToken;\n              //console.time('fetch all FOC');\n              //console.time('fetch all fingerprints');\n\n              //Fingerprint.getAllData(mPass).then(response => {\n              //  let fingerprintData = response.FlikResponse.Data;\n              //  $rootScope.allData.fingerprints.list                      = fingerprintData.MerchantFingerprintAll;\n              //  $rootScope.allData.fingerprints.count                     = fingerprintData.MerchantFingerprintAll.length;\n              //  $rootScope.allData.fingerprints.locations.list            = fingerprintData.FingerprintLocationAll;\n              //  $rootScope.allData.fingerprints.locations.count           = fingerprintData.FingerprintLocationAll.length;\n              //  $rootScope.allData.fingerprints.transactions.list         = fingerprintData.FingerprintTransactionAll;\n              //  $rootScope.allData.fingerprints.transactions.count        = fingerprintData.FingerprintTransactionAll.length;\n              //  $rootScope.allData.fingerprints.socialTransactions.list   = fingerprintData.FingerprintProductAll;\n              //  $rootScope.allData.fingerprints.socialTransactions.count  = fingerprintData.FingerprintProductAll.length;\n              //  $rootScope.allData.fingerprints.beaconTransactions.list   = fingerprintData.FingerprintBeaconsAll;\n              //  $rootScope.allData.fingerprints.beaconTransactions.count  = fingerprintData.FingerprintBeaconsAll.length;\n              //  $rootScope.allData.fingerprints.causeTransactions.list    = fingerprintData.FingerprintCauseAll;\n              //  $rootScope.allData.fingerprints.causeTransactions.count   = fingerprintData.FingerprintCauseAll.length;\n\n                //console.timeEnd('fetch all fingerprints');\n                //console.time('fetch all offers');\n\n                //Offer.getAllData(mPass).then(response => {\n                //  let offerData = response.FlikResponse.Data;\n                //\n                //  $rootScope.allData.offers.list               = offerData.MerchantOfferAll;\n                //  $rootScope.allData.offers.count              = offerData.MerchantOfferAll.length;\n                //  $rootScope.allData.offers.locations.list     = offerData.OfferLocationAll;\n                //  $rootScope.allData.offers.locations.count    = offerData.OfferLocationAll.length;\n                //  $rootScope.allData.offers.transactions.list  = offerData.OfferTransactionAll;\n                //  $rootScope.allData.offers.transactions.count = offerData.OfferTransactionAll.length;\n\n                  //console.timeEnd('fetch all offers');\n                  //console.time('fetch all campaigns');\n\n                  //Campaign.getAll(mPass).then(response => {\n                  //  let campaignList = response.FlikResponse.Data.MerchantCampaign.CampaignList;\n                  //\n                  //  $rootScope.allData.campaigns.list  = campaignList;\n                  //  $rootScope.allData.campaigns.count = campaignList.length;\n                  //\n                  //  //console.timeEnd('fetch all campaigns');\n                  //  //console.time('for loop campaign');\n                  //  Product.getAll(mPass).then(response => {\n                  //    let productList = response.FlikResponse.Data.MerchantProductAll.ProductList;\n                  //\n                  //    $rootScope.allData.products.list             = productList;\n                  //    $rootScope.allData.products.count            = productList.length;\n                  //    $rootScope.allData.products.categories.list  = productList.length > 0 ? $filter('unique')(productList, 'productCategory') : [];\n                  //    $rootScope.allData.products.categories.count = $rootScope.allData.products.categories.list.length;\n                  //    $rootScope.allData.products.types.list       = productList.length > 0 ? $filter('unique')(productList, 'productType') : [];\n                  //    $rootScope.allData.products.types.count      = $rootScope.allData.products.types.list.length;\n                  //    $rootScope.allData.products.name.list        = productList.length > 0 ? $filter('unique')(productList, 'productName') : [];\n                  //    $rootScope.allData.products.name.count       = $rootScope.allData.products.types.list.length;\n                  //    $rootScope.allData.products.brands.list      = productList.length > 0 ?  $filter('unique')(productList, 'brandName') : [];\n                  //    $rootScope.allData.products.brands.count     = $rootScope.allData.products.brands.list.length;\n                  //Analytics.getProductWithTransactionAll(mPass).then(response =>{\n                  //    let productsWithTransactionList = response.FlikResponse.Data.MerchantProduct.ProductGet;\n                  //$rootScope.allData.productsWithTransaction.list  = productsWithTransactionList;\n                  //});\n                      //Cause.causeGetAll(mPass).then(response => {\n                      //  let causeList = response.FlikResponse.Data.MerchantCauseAllAll.CauseAllList;\n                      //  //console.log(`this is allData ${JSON.stringify($rootScope.allData, null, 4)}`);\n                      //\n                      //  $rootScope.allData.causes.list  = causeList;\n                      //  $rootScope.allData.causes.count = causeList.length;\n                      //\n                      // Store.storeGetAll(mPass).then(response =>{\n                      //    let storeList = response.FlikResponse.Data.MerchantStoreAll.StoreList;\n                      //    $rootScope.allData.stores.list = storeList;\n                      //    $rootScope.allData.stores.count = storeList.length;\n                      //\n                      //Beacon.beaconGetAll(mPass).then(response =>{\n                      //\n                          if(response.FlikResponse.Status.StatusCode == 0 ){\n                      //    let beaconList = response.FlikResponse.Data.MerchantBeacons.GetAll;\n                      //    $rootScope.allData.beacons.list = beaconList;\n                      //\n                      //    $rootScope.allData.beacons.count = beaconList.length;\n\n\n                          $scope.toggleWizardLoader.showLoader = false;\n                          $state.go('core.home');\n                        }\n                         else{$scope.toggleWizardLoader.showLoader = false;\n                           $state.go('core.home');\n                         }\n                      //},\n            //error =>{\n            //              console.info(JSON.stringify(error, null, 4));\n            //          });\n\n                      //},\n            //error =>{\n            //              console.info(JSON.stringify(error, null, 4));\n            //\n            //          });\n            //\n            //\n            //          },\n            //error => {\n            //            console.info(JSON.stringify(error, null, 4));\n            //          });\n            //        }, error => {\n            //          console.info(JSON.stringify(error, null, 4));\n            //        });\n            //      },\n    //error => {\n    //                console.info(JSON.stringify(error, null, 4));\n    //              });\n    //            }, error => {\n    //              console.info(JSON.stringify(error, null, 4));\n    //            });\n    //          }, error => {\n    //            console.info(JSON.stringify(error, null, 4));\n    //          });\n            }\n      else if (statusCode == 1) {\n              $scope.toggleWizardLoader.showLoader = false;\n              console.warn('and the status is '+statusCode);\n              console.warn( response+' token not valid - need to login again' );\n              locker.driver('local')\n                .namespace('core')\n                .forget(['merchantToken', 'me']);\n              $state.go('access.signin');\n            }\n          }, error => {\n              $scope.toggleWizardLoader.showLoader = false;\n              console.info( 'cannot validate token -- the error is ' + JSON.stringify(error, null, 4));\n          });\n        } else if (statusCode == 1) {\n            $scope.toggleWizardLoader.showLoader = false;\n            console.warn( 'no bueno' + JSON.stringify(response, null, 4));\n            $scope.authError = statusMessage;\n        } else {\n            $scope.toggleWizardLoader.showLoader = false;\n            console.warn( 'no bueno' + JSON.stringify(response, null, 4));\n            $scope.authError = statusMessage;\n        }\n      }, error => {\n          $scope.toggleWizardLoader.showLoader = false;\n          $scope.authError = \"There was an error logging in.. Please contact support.\";\n          console.error('epic fail ' + JSON.stringify(error, null, 4));\n      });\n    };\n  }]);\n"]}