{"version":3,"sources":["../../../js/controllers/core.profile.js"],"names":[],"mappings":"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","file":"core.profile.js","sourcesContent":["\"use strict\";\n\n// Form controller\napp.controller(\"CoreProfileCtrl\", [\"$scope\", \"$rootScope\",  \"FileUploader\", \"locker\",  \"$filter\", \"$state\", \"$stateParams\", \"$mdToast\", \"$animate\", \"Product\", \"Store\", \"Offer\", \"Cause\", \"Fingerprint\", \"Beacon\",\"Campaign\",\n  function(                         $scope,   $rootScope,    FileUploader,   locker,    $filter,   $state,   $stateParams,   $mdToast,   $animate, Product, Store, Offer, Cause, Fingerprint, Beacon,Campaign) {\n\n            /**\n             * get Dexie dbCore\n             *\n             */\n            let dbCore = $rootScope.dbCore;\n\n            /**\n             * get merchantMe and merchantToken from Locker\n             *\n             */\n            let merchantMe = locker.driver(\"local\").namespace(\"core\").get(\"me\");\n            let merchantToken = locker.driver(\"local\").namespace(\"core\").get(\"merchantToken\");\n            let mPass = {\n                MerchantToken : merchantToken\n            };\n      $scope.productRows = {\n\n          allProductRows: []\n      };\n\n              // store function\n              $scope.allStores =()=>{\n                Store.storeGetAll(mPass).then(response =>{\n                  let storeList = response.FlikResponse.Data.MerchantStoreAll.StoreList;\n                  //$rootScope.allData.stores.list = storeList;\n                  //$rootScope.allData.stores.count = storeList.length;\n                  $scope.storesRows = {\n                    allStoreRows:storeList\n                  };\n                });\n              };\n              $scope.allLoyalty =()=>{\n                    Offer.getAllloyalty(mPass).then(response =>{\n                    let loyaltyList = response.FlikResponse.Data.MerchantOfferLoyaltyAll.OfferLoyaltyList;\n                    //$rootScope.allData.loyalty.list = loyaltyList;\n                    //$rootScope.allData.loyalty.count = loyaltyList.length;\n                    $scope.loyaltyRows = {\n                        allLoyaltyRows:loyaltyList\n                    };\n                });\n                };\n                $scope.allLoyalty();\n            // uploader store\n\n            var uploaderStore = $scope.uploaderStore = new FileUploader({\n              url: 'http://66.228.114.178/genie/api/upload/merchant/store'\n            });\n\n            // FILTERS\n\n            uploaderStore.filters.push({\n              name: 'customFilter',\n              fn: function(item /*{File|FileLikeObject}*/, options) {\n                  return this.queue.length < 10;\n              }\n            });\n\n            uploaderStore.formData.push({\n            MerchantToken: merchantToken\n            });\n\n            // CALLBACKS\n\n            uploaderStore.onWhenAddingFileFailed = function(item /*{File|FileLikeObject}*/, filter, options) {\n              //console.info('onWhenAddingFileFailed', item, filter, options);\n            };\n            uploaderStore.onAfterAddingFile = function(fileItem) {\n              //console.info('onAfterAddingFile', fileItem);\n            };\n            uploaderStore.onAfterAddingAll = function(addedFileItems) {\n              //console.info('onAfterAddingAll', addedFileItems);\n            };\n            uploaderStore.onBeforeUploadItem = function(item) {\n              //console.info('onBeforeUploadItem', item);\n            };\n            uploaderStore.onProgressItem = function(fileItem, progress) {\n              //console.info('onProgressItem', fileItem, progress);\n            };\n            uploaderStore.onProgressAll = function(progress) {\n              //console.info('onProgressAll', progress);\n            };\n            uploaderStore.onSuccessItem = function(fileItem, response, status, headers) {\n              //console.info('onSuccessItem', fileItem, response, status, headers);\n\n            };\n            uploaderStore.onErrorItem = function(fileItem, response, status, headers) {\n              //console.info('onErrorItem', fileItem, response, status, headers);\n            };\n            uploaderStore.onCancelItem = function(fileItem, response, status, headers) {\n              //console.info('onCancelItem', fileItem, response, status, headers);\n            };\n            uploaderStore.onCompleteItem = function(fileItem, response, status, headers) {\n              //console.info('onCompleteItem', fileItem, response, status, headers);\n            };\n            uploaderStore.onCompleteAll = function() {\n              //console.info('onCompleteAll');\n            };\n\n            //console.info('uploaderStore', uploaderStore);\n\n            // product function\n            //$scope.allProducts =()=>{\n            //  Product.getAll(mPass).then(response =>{\n            //    let productList = response.FlikResponse.Data.MerchantProductAll.ProductList;\n            //    $rootScope.allData.products.list             = productList;\n            //    $rootScope.allData.products.count            = productList.length;\n            //    //$rootScope.allData.products.categories.list  = productList.length > 0 ? $filter('unique')(productList, 'productCategory') : [];\n            //    //$rootScope.allData.products.categories.count = $rootScope.allData.products.categories.list.length;\n            //    //$rootScope.allData.products.types.list       = productList.length > 0 ? $filter('unique')(productList, 'productType') : [];\n            //    //$rootScope.allData.products.types.count      = $rootScope.allData.products.types.list.length;\n            //    //$rootScope.allData.products.name.list        = productList.length > 0 ? $filter('unique')(productList, 'productName') : [];\n            //    //$rootScope.allData.products.name.count       = $rootScope.allData.products.types.list.length;\n            //    //$rootScope.allData.products.brands.list      = productList.length > 0 ?  $filter('unique')(productList, 'brandName') : [];\n            //    //$rootScope.allData.products.brands.count     = $rootScope.allData.products.brands.list.length;\n            //    $scope.productRows = {\n            //      allProductRows: productList\n            //    };\n            //  });\n            //};\n\n            // uploader product\n\n            var uploaderProduct = $scope.uploaderProduct = new FileUploader({\n              method : 'POST',\n              url: 'http://66.228.114.178/genie/api/upload/merchant/product'\n\n            });\n\n            // FILTERS\n\n            uploaderProduct.filters.push({\n              name: 'customFilter',\n              fn: function(item /*{File|FileLikeObject}*/, options) {\n                  return this.queue.length < 10;\n              }\n            });\n\n            uploaderProduct.formData.push({\n                MerchantToken: merchantToken\n            });\n            // CALLBACKS\n\n            uploaderProduct.onWhenAddingFileFailed = function(item /*{File|FileLikeObject}*/, filter, options) {\n              //console.info('onWhenAddingFileFailed', item, filter, options);\n            };\n            uploaderProduct.onAfterAddingFile = function(fileItem) {\n              //console.info('onAfterAddingFile', fileItem);\n            };\n            uploaderProduct.onAfterAddingAll = function(addedFileItems) {\n              //console.info('onAfterAddingAll', addedFileItems);\n            };\n            uploaderProduct.onBeforeUploadItem = function(item) {\n              //console.info('onBeforeUploadItem', item);\n            };\n            uploaderProduct.onProgressItem = function(fileItem, progress) {\n              //console.info('onProgressItem', fileItem, progress);\n            };\n            uploaderProduct.onProgressAll = function(progress) {\n              //console.info('onProgressAll', progress);\n            };\n            uploaderProduct.onSuccessItem = function(fileItem, response, status, headers) {\n              //console.info('onSuccessItem', fileItem, response, status, headers);\n              $scope.allProducts();\n            };\n            uploaderProduct.onErrorItem = function(fileItem, response, status, headers) {\n              //console.info('onErrorItem', fileItem, response, status, headers);\n            };\n            uploaderProduct.onCancelItem = function(fileItem, response, status, headers) {\n              //console.info('onCancelItem', fileItem, response, status, headers);\n            };\n            uploaderProduct.onCompleteItem = function(fileItem, response, status, headers) {\n              //console.info('onCompleteItem', fileItem, response, status, headers);\n            };\n            uploaderProduct.onCompleteAll = function() {\n              //console.info('onCompleteAll');\n            };\n\n            //console.info('uploaderProduct', uploaderProduct);\n\n            // uploader consumer\n\n            var uploaderConsumer = $scope.uploaderConsumer = new FileUploader({\n                url: 'http://66.228.114.178/genie/api/upload/consumer'\n            });\n\n            // FILTERS\n\n            uploaderConsumer.filters.push({\n              name: 'customFilter',\n              fn: function(item /*{File|FileLikeObject}*/, options) {\n                  return this.queue.length < 10;\n              }\n            });\n            uploaderConsumer.formData.push({\n                MerchantToken: merchantToken\n            });\n            // CALLBACKS\n\n            uploaderConsumer.onWhenAddingFileFailed = function(item /*{File|FileLikeObject}*/, filter, options) {\n              //console.info('onWhenAddingFileFailed', item, filter, options);\n            };\n            uploaderConsumer.onAfterAddingFile = function(fileItem) {\n              //console.info('onAfterAddingFile', fileItem);\n            };\n            uploaderConsumer.onAfterAddingAll = function(addedFileItems) {\n              //console.info('onAfterAddingAll', addedFileItems);\n            };\n            uploaderConsumer.onBeforeUploadItem = function(item) {\n              //console.info('onBeforeUploadItem', item);\n            };\n            uploaderConsumer.onProgressItem = function(fileItem, progress) {\n              //console.info('onProgressItem', fileItem, progress);\n            };\n            uploaderConsumer.onProgressAll = function(progress) {\n              //console.info('onProgressAll', progress);\n            };\n            uploaderConsumer.onSuccessItem = function(fileItem, response, status, headers) {\n              //console.info('onSuccessItem', fileItem, response, status, headers);\n            };\n            uploaderConsumer.onErrorItem = function(fileItem, response, status, headers) {\n              //console.info('onErrorItem', fileItem, response, status, headers);\n            };\n            uploaderConsumer.onCancelItem = function(fileItem, response, status, headers) {\n              //console.info('onCancelItem', fileItem, response, status, headers);\n            };\n            uploaderConsumer.onCompleteItem = function(fileItem, response, status, headers) {\n              //console.info('onCompleteItem', fileItem, response, status, headers);\n            };\n            uploaderConsumer.onCompleteAll = function() {\n              //console.info('onCompleteAll');\n            };\n\n            //console.info('uploaderConsumer', uploaderConsumer);\n\n            // uploader transaction\n\n            var uploaderTransaction = $scope.uploaderTransaction = new FileUploader({\n              url: 'http://66.228.114.178/genie/api/upload/transaction'\n            });\n\n            // FILTERS\n\n            uploaderTransaction.filters.push({\n              name: 'customFilter',\n              fn: function(item /*{File|FileLikeObject}*/, options) {\n                  return this.queue.length < 10;\n              }\n            });\n\n            uploaderTransaction.formData.push({\n                MerchantToken: merchantToken\n            });\n\n            // CALLBACKS\n\n            uploaderTransaction.onWhenAddingFileFailed = function(item /*{File|FileLikeObject}*/, filter, options) {\n              //console.info('onWhenAddingFileFailed', item, filter, options);\n            };\n            uploaderTransaction.onAfterAddingFile = function(fileItem) {\n              //console.info('onAfterAddingFile', fileItem);\n            };\n            uploaderTransaction.onAfterAddingAll = function(addedFileItems) {\n              //console.info('onAfterAddingAll', addedFileItems);\n            };\n            uploaderTransaction.onBeforeUploadItem = function(item) {\n              //console.info('onBeforeUploadItem', item);\n            };\n            uploaderTransaction.onProgressItem = function(fileItem, progress) {\n              //console.info('onProgressItem', fileItem, progress);\n            };\n            uploaderTransaction.onProgressAll = function(progress) {\n              //console.info('onProgressAll', progress);\n            };\n            uploaderTransaction.onSuccessItem = function(fileItem, response, status, headers) {\n              //console.info('onSuccessItem', fileItem, response, status, headers);\n            };\n            uploaderTransaction.onErrorItem = function(fileItem, response, status, headers) {\n              //console.info('onErrorItem', fileItem, response, status, headers);\n            };\n            uploaderTransaction.onCancelItem = function(fileItem, response, status, headers) {\n              //console.info('onCancelItem', fileItem, response, status, headers);\n            };\n            uploaderTransaction.onCompleteItem = function(fileItem, response, status, headers) {\n              //console.info('onCompleteItem', fileItem, response, status, headers);\n            };\n            uploaderTransaction.onCompleteAll = function() {\n              //console.info('onCompleteAll');\n            };\n\n            //console.info('uploaderTransaction', uploaderTransaction);\n\n            // cause function\n            $scope.allCauses =()=>{\n    console.log(\" in profile all causes\");\n              Cause.causeGetAll(mPass).then(response =>{\n                let causeList = response.FlikResponse.Data.MerchantCauseAllAll.CauseAllList;\n                $rootScope.allData.causes.list  = causeList;\n                $rootScope.allData.causes.count = causeList.length;\n                $scope.causeRows = {\n                  allCauseRows:causeList\n                };\n              });\n            };\n\n            // uploader cause\n\n            var uploaderCause = $scope.uploaderCause = new FileUploader({\n              url: 'http://66.228.114.178/genie/api/upload/merchant/cause'\n            });\n\n            // FILTERS\n\n            uploaderCause.filters.push({\n              name: 'customFilter',\n              fn: function(item /*{File|FileLikeObject}*/, options) {\n                  return this.queue.length < 10;\n              }\n            });\n            uploaderCause.formData.push({\n                MerchantToken: merchantToken\n            });\n            // CALLBACKS\n\n            uploaderCause.onWhenAddingFileFailed = function(item /*{File|FileLikeObject}*/, filter, options) {\n              //console.info('onWhenAddingFileFailed', item, filter, options);\n            };\n            uploaderCause.onAfterAddingFile = function(fileItem) {\n              //console.info('onAfterAddingFile', fileItem);\n            };\n            uploaderCause.onAfterAddingAll = function(addedFileItems) {\n              //console.info('onAfterAddingAll', addedFileItems);\n            };\n            uploaderCause.onBeforeUploadItem = function(item) {\n              //console.info('onBeforeUploadItem', item);\n            };\n            uploaderCause.onProgressItem = function(fileItem, progress) {\n              //console.info('onProgressItem', fileItem, progress);\n            };\n            uploaderCause.onProgressAll = function(progress) {\n              //console.info('onProgressAll', progress);\n            };\n            uploaderCause.onSuccessItem = function(fileItem, response, status, headers) {\n              //console.info('onSuccessItem', fileItem, response, status, headers);\n              $scope.allCauses();\n            };\n            uploaderCause.onErrorItem = function(fileItem, response, status, headers) {\n              //console.info('onErrorItem', fileItem, response, status, headers);\n            };\n            uploaderCause.onCancelItem = function(fileItem, response, status, headers) {\n              //console.info('onCancelItem', fileItem, response, status, headers);\n            };\n            uploaderCause.onCompleteItem = function(fileItem, response, status, headers) {\n              //console.info('onCompleteItem', fileItem, response, status, headers);\n            };\n            uploaderCause.onCompleteAll = function() {\n              //console.info('onCompleteAll');\n            };\n\n            //console.info('uploaderCause', uploaderCause);\n\n            // function Beacon\n            $scope.allBeacons =()=>{\n              Beacon.beaconGetAll(mPass).then(response =>{\n                let beaconList = response.FlikResponse.Data.MerchantBeacons.GetAll;\n                //$rootScope.allData.beacons.list = beaconList;\n                //$rootScope.allData.beacons.count = beaconList.length;\n                $scope.beaconRows = {\n                    allBeaconRows:beaconList\n                };\n              });\n            };\n\n            //uploader beacon\n\n            var uploaderBeacon = $scope.uploaderBeacon = new FileUploader({\n              method:\"post\",\n              url: 'http://66.228.114.178/genie/api/upload/merchant/beacons'\n            });\n\n          // FILTERS\n\n            uploaderBeacon.filters.push({\n              name: 'customFilter',\n              fn: function(item /*{File|FileLikeObject}*/, options) {\n                  return this.queue.length < 10;\n              }\n            });\n\n            uploaderBeacon.formData.push({\n                MerchantToken: merchantToken\n            });\n          // CALLBACKS\n\n            uploaderBeacon.onWhenAddingFileFailed = function(item /*{File|FileLikeObject}*/, filter, options) {\n              //console.info('onWhenAddingFileFailed', item, filter, options);\n            };\n            uploaderBeacon.onAfterAddingFile = function(fileItem) {\n              //console.info('onAfterAddingFile', fileItem);\n            };\n            uploaderBeacon.onAfterAddingAll = function(addedFileItems) {\n              //console.info('onAfterAddingAll', addedFileItems);\n            };\n            uploaderBeacon.onBeforeUploadItem = function(item) {\n              //console.info('onBeforeUploadItem', item);\n            };\n            uploaderBeacon.onProgressItem = function(fileItem, progress) {\n              //console.info('onProgressItem', fileItem, progress);\n            };\n            uploaderBeacon.onProgressAll = function(progress) {\n              //console.info('onProgressAll', progress);\n            };\n            uploaderBeacon.onSuccessItem = function(fileItem, response, status, headers) {\n              //console.info('onSuccessItem', fileItem, response, status, headers);\n                $scope.allBeacons();\n            };\n            uploaderBeacon.onErrorItem = function(fileItem, response, status, headers) {\n              //console.info('onErrorItem', fileItem, response, status, headers);\n            };\n            uploaderBeacon.onCancelItem = function(fileItem, response, status, headers) {\n              //console.info('onCancelItem', fileItem, response, status, headers);\n            };\n            uploaderBeacon.onCompleteItem = function(fileItem, response, status, headers) {\n              //console.info('onCompleteItem', fileItem, response, status, headers);\n            };\n            uploaderBeacon.onCompleteAll = function() {\n              //console.info('onCompleteAll');\n            };\n\n          //console.info('uploaderBeacon', uploaderBeacon);\n\n\n    $scope.allCampaigns =()=>{\n    console.log(\" in profile campaign\");\n        Campaign.getAll(mPass).then(response =>{\n           let campaignList = response.FlikResponse.Data.MerchantCampaign.CampaignList;\n           //$rootScope.allData.campaigns.list = campaignList;\n           //$rootScope.allData.campaigns.count = campaignList.length;\n           $scope.campaignRows = {\n               allCampaignRows:campaignList\n           };\n        });\n    };\n\n//Campaign Loader\n\n    var uploaderCampaign = $scope.uploaderCampaign = new FileUploader({\n        method:\"post\",\n        url: 'http://66.228.114.178/genie/api/upload/merchant/campaign'\n    });\n\n// FILTERS\n    uploaderCampaign.filters.push({\n        name: 'customFilter',\n        fn: function(item /*{File|FileLikeObject}*/, options) {\n            return this.queue.length < 10;\n        }\n    });\n\n    uploaderCampaign.formData.push({\n        MerchantToken: merchantToken\n    });\n\n// CALLBACKS\n\n    uploaderCampaign.onWhenAddingFileFailed = function(item /*{File|FileLikeObject}*/, filter, options) {\n        //console.info('onWhenAddingFileFailed', item, filter, options);\n    };\n\n    uploaderCampaign.onAfterAddingFile = function(fileItem) {\n        //console.info('onAfterAddingFile', fileItem);\n    };\n\n    uploaderCampaign.onAfterAddingAll = function(addedFileItems) {\n        //console.info('onAfterAddingAll', addedFileItems);\n    };\n\n    uploaderCampaign.onBeforeUploadItem = function(item) {\n        //console.info('onBeforeUploadItem', item);\n    };\n    uploaderCampaign.onProgressItem = function(fileItem, progress) {\n        //console.info('onProgressItem', fileItem, progress);\n    };\n    uploaderCampaign.onProgressAll = function(progress) {\n        //console.info('onProgressAll', progress);\n    };\n    uploaderCampaign.onSuccessItem = function(fileItem, response, status, headers) {\n        //console.info('onSuccessItem', fileItem, response, status, headers);\n        $scope.allCampaigns();\n    };\n    uploaderCampaign.onErrorItem = function(fileItem, response, status, headers) {\n        //console.info('onErrorItem', fileItem, response, status, headers);\n    };\n    uploaderCampaign.onCancelItem = function(fileItem, response, status, headers) {\n        //console.info('onCancelItem', fileItem, response, status, headers);\n    };\n    uploaderCampaign.onCompleteItem = function(fileItem, response, status, headers) {\n        //console.info('onCompleteItem', fileItem, response, status, headers);\n    };\n    uploaderCampaign.onCompleteAll = function() {\n        //console.info('onCompleteAll');\n    };\n\n    //console.info('uploaderCampaign', uploaderCampaign);\n\n}]);\n"]}