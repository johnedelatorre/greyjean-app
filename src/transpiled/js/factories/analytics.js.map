{"version":3,"sources":["../../../js/factories/analytics.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CACpB,OAAO,CAAC,WAAW,EAAE,CAAC,YAAY,EAAC,aAAa,EAC/C,UAAsB,UAAU,EAAC,WAAW,EAAC;;;;;AAK3C,MAAI,mBAAmB,GAAiB,WAAW,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;AACzF,MAAI,yBAAyB,GAAW,WAAW,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;AAC7E,MAAI,qBAAqB,GAAe,WAAW,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;AACpF,MAAI,2BAA2B,GAAS,WAAW,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;AAClF,MAAI,qBAAqB,GAAe,WAAW,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;AACjF,MAAI,4BAA4B,GAAQ,WAAW,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAC;AACrG,MAAI,gCAAgC,GAAI,WAAW,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;AAC9F,MAAI,wBAAwB,GAAY,WAAW,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;AACpF,MAAI,uBAAuB,GAAa,WAAW,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;AACpF,MAAI,+BAA+B,GAAK,WAAW,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;AAC5F,MAAI,2BAA2B,GAAS,WAAW,CAAC,GAAG,CAAC,2DAA2D,CAAC,CAAC;AACrH,MAAI,mCAAmC,GAAI,WAAW,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;AAC5F,SAAO;;;;;;;;;AASN,iBAAa,EAAE,uBAAA,aAAa,EAAI;AACzB,aAAO,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KACrD;;AAED,uBAAmB,EAAE,6BAAA,aAAa,EAAI;AACnC,aAAO,yBAAyB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KACvD;;;;;AAKD,kBAAc,EAAE,wBAAA,aAAa,EAAI;AAC1B,aAAO,qBAAqB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KACvD;;AAED,wBAAoB,EAAE,8BAAA,aAAa,EAAI;AACpC,aAAO,2BAA2B,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KACzD;;;;;;;AAOA,kBAAc,EAAE,wBAAA,UAAU,EAAG;AAC3B,aAAO,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KAC/C;;AAED,iCAA6B,EAAE,uCAAA,UAAU,EAAG;AAC1C,aAAO,4BAA4B,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KACtD;;AAED,wBAAoB,EAAE,8BAAA,MAAM,EAAG;AAC7B,aAAO,2BAA2B,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACjD;AACD,6BAAyB,EAAE,mCAAA,aAAa,EAAI;AAC1C,aAAO,+BAA+B,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KAC5D;;;;;AAKD,6BAAyB,EAAE,mCAAA,YAAY,EAAG;AACxC,aAAO,gCAAgC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAC5D;;;;;;;AAOD,kBAAc,EAAE,wBAAA,YAAY,EAAG;AAC7B,aAAO,wBAAwB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACpD;;AAED,gCAA4B,EAAE,sCAAA,aAAa,EAAG;AAC5C,aAAO,mCAAmC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KAChE;;;;;;;AAOD,kBAAc,EAAE,wBAAA,YAAY,EAAG;AAC7B,aAAO,uBAAuB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACnD;GACF,CAAC;CACL,CAAC,CAAC,CAAC","file":"analytics.js","sourcesContent":["'use strict';\n\nangular.module('app')\n.factory('Analytics', [\"$rootScope\",\"Restangular\",\n  function(             $rootScope,Restangular){\n    /**\n     * Our Restangular urls for Analytics factory\n     */\n\n    let rAnalyticsGetFilter               = Restangular.all('merchant/analytics/filter/get');\n    let rAnalyticsGetSocialFilter         = Restangular.all('social/filter/get');\n    let rAnalyticsCampaignAll             = Restangular.all('merchant/campaign/getAll');\n    let rAnalyticsSocialCampaignAll       = Restangular.all('social/campaign/getAll');\n    let rAnalyticsConsumerAll             = Restangular.all('merchant/consumer/get');\n    let rAnalyticsRecommendationsAll      = Restangular.all('merchant/consumer/products/recommendation');\n    let rAnalyticsConsumerTransactionAll  = Restangular.all('merchant/consumer/transactions/get');\n    let rAnalyticsConsumerUpdate          = Restangular.all('merchant/consumer/update');\n    let rAnalyticsConsumerTrash           = Restangular.all('merchant/consumer/delete');\n    let rAnalyticsProductCorrelationAll   = Restangular.all('merchant/product_correlation/get');\n    let rAnalyticsItemSimilarityAll       = Restangular.all('merchant/consumer/products/item_similarity/recommendation');\n    let rAnalyticsProductWithTransactionAll  = Restangular.all('merchant/campaign/product/get');\n    return {\n      /**\n       * Fetches all analytics for op merchant\n       *\n       * @merchantToken     {object}    merchantToken from which to fetch all analytics\n       *\n       * @return {object}   Restangularized response from API\n       */\n\n     getFilterData: merchantToken => {\n            return rAnalyticsGetFilter.post(merchantToken);\n     },\n\n     getSocialFilterData: merchantToken => {\n        return rAnalyticsGetSocialFilter.post(merchantToken);\n     },\n\n    /**\n     *  get all campaign data for performance\n      */\n     getCampaignAll: merchantToken => {\n            return rAnalyticsCampaignAll.post(merchantToken);\n     },\n\n     getSocialCampaignAll: merchantToken => {\n        return rAnalyticsSocialCampaignAll.post(merchantToken);\n     },\n\n    /**\n     * Get all the consumer for consumer table below consumer uploader\n     *\n     */\n\n      getConsumerAll: consumerNo =>{\n        return rAnalyticsConsumerAll.post(consumerNo);\n      },\n\n      getConsumerrecommendationsAll: consumerNo =>{\n        return rAnalyticsRecommendationsAll.post(consumerNo);\n      },\n\n      getItemSimilarityAll: itemNo =>{\n        return rAnalyticsItemSimilarityAll.post(itemNo);\n      },\n      getProductCorrelationsAll: merchantToken => {\n        return rAnalyticsProductCorrelationAll.post(merchantToken);\n      },\n      /**\n       * Get all the consumer transaction for uploader\n       *\n       */\n      getConsumerTransactionAll: consumerInfo =>{\n        return rAnalyticsConsumerTransactionAll.post(consumerInfo);\n      },\n\n      /**\n       * consumer update on click on save button from profile page\n       *\n       */\n\n      consumerUpdate: consumerInfo =>{\n        return rAnalyticsConsumerUpdate.post(consumerInfo);\n      },\n\n      getProductWithTransactionAll: merchantToken =>{\n        return rAnalyticsProductWithTransactionAll.post(merchantToken);\n      },\n\n      /**\n       * consumer delete\n       *\n       */\n\n      consumerDelete: consumerInfo =>{\n        return rAnalyticsConsumerTrash.post(consumerInfo);\n      }\n    };\n}]);\n"]}