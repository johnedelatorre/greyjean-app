{"version":3,"sources":["../../../js/factories/offer.js"],"names":[],"mappings":"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","file":"offer.js","sourcesContent":["'use strict';\n\nangular.module('app')\n.factory('Offer', [\"Restangular\",\"Fingerprint\",\"$q\",\n  function(         Restangular,Fingerprint,$q) {\n\n  /**\n   * Our Restangular urls for Offer factory\n   */\n  let rOfferCreate            = Restangular.all('merchant/offer/new');\n  let rLoyaltyCreate          = Restangular.all('merchant/offer/loyalty/new');\n  let rOfferUpdate            = Restangular.all('merchant/offer/update');\n  let rLoyaltyUpdate          = Restangular.all('merchant/offer/loyalty/update');\n  let rOfferTrash             = Restangular.all('merchant/offer/delete');\n  let rLoyaltyTrash           = Restangular.all('merchant/offer/loyalty/delete');\n  let rOfferGetOne            = Restangular.all('merchant/offer/get');\n  let rOfferGetAll            = Restangular.all('merchant/offer/all');\n  let rLoyaltyGetAll          = Restangular.all('merchant/offer/loyalty/getAll');\n  let rOfferLocationCreate    = Restangular.all(\"merchant/offer/location/new\");\n  let rOfferLocationUpdate    = Restangular.all(\"merchant/offer/location/update\");\n  let rOfferLocationTrash     = Restangular.all(\"merchant/offer/location/delete\");\n  let rOfferLocationGetOne    = Restangular.all(\"merchant/offer/location/get\");\n  let rOfferLocationGetAll    = Restangular.all(\"merchant/offer/location/all\");\n  let rOfferTransactionCreate = Restangular.all(\"merchant/offer/transactions/new\");\n  let rOfferTransactionUpdate = Restangular.all(\"merchant/offer/transactions/update\");\n  let rOfferTransactionTrash  = Restangular.all(\"merchant/offer/transactions/delete\");\n  let rOfferTransactionGetOne = Restangular.all(\"merchant/offer/transactions/get\");\n  let rOfferTransactionGetAll = Restangular.all(\"merchant/offer/transactions/all\");\n  let rOfferGetAllData        = Restangular.all(\"merchant/offer/alls\");\n      let rOfferPaginatedData = Restangular.all(\"merchant/offer/all/number\");\n  var offerAllData            = {};\n      var offerPaginateAllData = {};\n      Restangular.setBaseUrl('http://66.228.114.178/genie/api/');\n\n  return {\n    /**\n     * Creates a Offer and loyalty\n     *\n     * @offerInfo  {object}  info from $scope to create Offer\n     *\n     * @return {object}   Restangularized response from API\n     */\n    create: offerInfo => {\n      return rOfferCreate.post(offerInfo);\n    },\n\n    createloyalty: loyaltyInfo => {\n    return rLoyaltyCreate.post(loyaltyInfo);\n    },\n    /**\n     * Updates an offer and loyalty\n     *\n     * @offerInfo  {object}   info from $scope to update offer\n     *\n     * @return {object}   Restangularized response from API\n     */\n    update: offerInfo => {\n      return rOfferUpdate.post(offerInfo);\n    },\n\n    updateloyalty: loyaltyInfo => {\n        return rLoyaltyUpdate.post(loyaltyInfo);\n    },\n    /**\n     * Deletes an offer and loyalty\n     *\n     * @offerToDelete  {object}  offerId from $scope to delete offer\n     *\n     * @return {object}   Restangularized response from API\n     */\n    trash: offerToTrash => {\n      return rOfferTrash.post(offerToTrash);\n    },\n\n    trashloyalty: loyaltyToTrash => {\n        return rLoyaltyTrash.post(loyaltyToTrash);\n    },\n    /**\n     * Fetches one offer for op merchant\n     *\n     * @offerToGet  {object}   offerId from $scope to retrieve offer from API\n     *\n     * @return {object}   Restangularized response from API\n     */\n    getOne: offerToGet => {\n      return rOfferGetOne.post(offerToGet);\n    },\n    /**\n     * Fetches all offers for op merchant\n     *\n     * @merchantToken  {object}    merchantToken from which to fetch all offers\n     *\n     * @return {object}   Restangularized response from APId\n     */\n    getAll: merchantToken => {\n      return rOfferGetAll.post(merchantToken);\n    },\n\n    getAllloyalty: merchantToken => {\n        return rLoyaltyGetAll.post(merchantToken);\n    },\n    /**\n     * Creates a offer location\n     *\n     * @offerLocationInfo   {object}    info from $scope to create offer location\n     *\n     * @return {object}   Restangularized response from API\n     */\n    createLocation: offerLocationInfo => {\n      return rOfferLocationCreate.post(offerLocationInfo);\n    },\n    /**\n     * Updates a offer location\n     *\n     * @offerLocationInfo   {object}    info from $scope to update offer location\n     *\n     * @return {object}   Restangularized response from API\n     */\n    updateLocation: offerLocationInfo => {\n      return rOfferLocationUpdate.post(offerLocationInfo);\n    },\n    /**\n     * Deletes a offer location\n     *\n     * @offerLocationToTrash    {object}    offerLocationId from $scope to delete offer location\n     *\n     * @return {object}   Restangularized response from API\n     */\n    trashLocation: offerLocationToTrash => {\n      return rOfferLocationTrash.post(offerLocationToTrash);\n    },\n    /**\n     * Fetches one offer location for op merchant\n     *\n     * @offerLocationToGet    {object}    offerLocationId from $scope to retrieve offer location from API\n     *\n     * @return {object}   Restangularized response from API\n     */\n    getOneLocation: offerLocationToGet => {\n      return rOfferLocationGetOne.post(offerLocationToGet);\n    },\n    /**\n     * Fetches all offer locations for op merchant\n     *\n     * @merchantToken     {object}    merchantToken from which to fetch all offers\n     *\n     * @return {object}   Restangularized response from APId\n     */\n    getAllLocation: merchantToken => {\n      return rOfferLocationGetAll.post(merchantToken);\n    },\n    /**\n     * Creates a offer transaction\n     *\n     * @offerTransactionInfo   {object}    info from $scope to create offer transaction\n     *\n     * @return {object}   Restangularized response from API\n     */\n    createTransaction: offerTransactionInfo => {\n      return rOfferTransactionCreate.post(offerTransactionInfo);\n    },\n    /**\n     * Updates a offer transaction\n     *\n     * @offerTransactionInfo   {object}    info from $scope to update offer transaction\n     *\n     * @return {object}   Restangularized response from API\n     */\n    updateTransaction: offerTransactionInfo => {\n      return rOfferTransactionUpdate.post(offerTransactionInfo);\n    },\n    /**\n     * Deletes a offer transaction\n     *\n     * @offerTransactionToTrash    {object}    offerTransactionId from $scope to delete offer transaction\n     *\n     * @return {object}   Restangularized response from API\n     */\n    trashTransaction: offerTransactionToTrash => {\n      return rOfferTransactionTrash.post(offerTransactionToTrash);\n    },\n    /**\n     * Fetches one offer transaction for op merchant\n     *\n     * @offerTransactionToGet    {object}    offerTransactionId from $scope to retrieve offer transaction from API\n     *\n     * @return {object}   Restangularized response from API\n     */\n    getOneTransaction: offerTransactionToGet => {\n      return rOfferTransactionGetOne.post(offerTransactionToGet);\n    },\n    /**\n     * Fetches all offer Transactions for op merchant\n     *\n     * @merchantToken     {object}    merchantToken from which to fetch all offers\n     *\n     * @return {object}   Restangularized response from APId\n     */\n    getAllTransaction: merchantToken => {\n      return rOfferTransactionGetAll.post(merchantToken);\n    },\n    getAllData: merchantToken => {\n      return rOfferGetAllData.post(merchantToken);\n    },\n\nOfferAllData: merchantToken =>{\n    console.log(\"in offer start\");\n    let mPass = {\n        MerchantToken: merchantToken\n    }\n    return $q(function(resolve, reject) {\n        console.log(\"before api call\");\n        console.log(rOfferGetAllData);\n        rOfferGetAllData.post(mPass).then(response =>{\n            console.log(\"response is\")\n        offerAllData = response.FlikResponse.Data.MerchantOfferAll;\n        console.log(\"in offer\");\n        //$rootScope.allData.campaigns.list = campaignList;\n        //$rootScope.allData.campaigns.count = campaignList.length;\n\n        resolve(offerAllData);\n    },function(err){\n        console.log(err);\n        error = err;\n        reject(error);\n    });\n});\n//return fingerprintAllData;\n},\n getOfferAllData: function() {\n    return offerAllData;\n},\nOfferPaginateAllData: function(start,limit,merchantToken) {\n    console.log(\"in offer pagination start\");\n    let mPass = {\n        StartLimit: start,\n        EndLimit: limit,\n        MerchantToken: merchantToken\n    }\n    return $q(function(resolve, reject) {\n        rOfferPaginatedData.post(mPass).then(response =>{\n        offerPaginateAllData = response.FlikResponse.Data.MerchantOfferAll.MerchantOfferList;\n        console.log(\"in offer\");\n\n        resolve(offerPaginateAllData);\n    },function(err){\n        console.log(err);\n        error = err;\n        reject(error);\n    });\n});\n//return fingerprintAllData;\n},\ngetOfferPaginateAllData: function() {\n    return offerPaginateAllData;\n}\n};\n\n}]);\n"]}