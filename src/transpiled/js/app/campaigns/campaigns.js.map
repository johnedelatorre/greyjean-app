{"version":3,"sources":["../../../../js/app/campaigns/campaigns.js"],"names":[],"mappings":"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","file":"campaigns.js","sourcesContent":["\"use strict\";\n\napp.controller(\"CampaignsCtrl\", [\"$scope\", \"$rootScope\", \"$http\", \"$mdToast\",  \"Campaign\", \"$filter\",\n  function(                       $scope,   $rootScope,   $http,   $mdToast,    Campaign,   $filter) {\n\n    /**\n     * get Dexie dbCore\n     *\n     */\n    let dbCore = $rootScope.dbCore;\n\n      $scope.toggleWizardLoader = {\n          showLoader: false\n      }\n    /**\n     * get merchantMe and merchantToken from Locker\n     *\n     */\n    let merchantMe    = locker.driver(\"local\").namespace(\"core\").get(\"me\");\n    let merchantToken = locker.driver(\"local\").namespace(\"core\").get(\"merchantToken\");\n\n    let merchantCampaigns  = $rootScope.allData.campaigns;\n\n      $scope.allCampaigns = {};\n      $scope.toggleWizardLoader.showLoader = true;\n      Campaign.CampaignAllData(merchantToken).then(function() {\n          $scope.allCampaigns = Campaign.getCampaignAllData();\n          //$scope.allCampaigns = $scope.allCampaigns;\n          $scope.toggleWizardLoader.showLoader = false;\n      });\n\n    $scope.trashCampaign = (index, cId) => {\n\n      let campaignId = {\n        CampaignId: cId,\n        MerchantToken: merchantToken\n      }\n          /*\n           this api call is done to remove the need for fetching the data at the time of log in.\n           */\n\n      Campaign.trash(campaignId).then(response => {\n\n        let statusCode = response.FlikResponse.Status.StatusCode;\n        let statusMessage = response.FlikResponse.Status.StatusMessage;\n\n        if (statusCode == 0) {\n\n          //merchantCampaigns.list.splice(index, 1);\n          //merchantCampaigns.count = merchantCampaigns.list.length;\n\n            $scope.allCampaigns.splice(index, 1);\n            //$scope.allCampaigns.count = $scope.allCampaigns.list.length;\n\n          $mdToast.show(\n            $mdToast.simple()\n              .content(\"campaign deleted successfully\")\n              .position(\"top right\")\n              .hideDelay(2700)\n          );\n\n        } else if (statusCode == 1 && statusMessage == \"No record found\" ||\n          statusCode == 1 && statusMessage ==  \"Data in the request is either empty or of invalid format\") {\n\n          $mdToast.show(\n            $mdToast.simple()\n              .content(statusMessage)\n              .position(\"top right\")\n              .hideDelay(2700)\n          );\n\n        } else if (statusCode == 3) {\n\n          /**\n           * if we reach here merchantToken is no longer valid\n           * we boot user back to signin\n           *\n           * TODO: add modal to reauth without back to signin page\n           */\n          locker.driver(\"local\")\n            .namespace(\"core\")\n            .forget(\"merchantToken\");\n          $state.go(\"access.signin\");\n          console.group(\"and the status is \" + statusCode);\n          console.warn(response + \" token not valid - need to login again\");\n          console.info(\"bye -- see you soon\");\n          console.groupEnd();\n\n        } else {\n\n          $mdToast.show(\n            $mdToast.simple()\n              .content(statusMessage)\n              .position(\"top right\")\n              .hideDelay(2700)\n          );\n          console.warn(statusMessage + \" this is the status message\");\n\n        }\n      }, error => {\n\n        $mdToast.show(\n          $mdToast.simple()\n            .content(\"there was an error deleting campaign please try again\")\n            .position(\"top right\")\n            .hideDelay(2700)\n        );\n        console.warn(error + \" this is the error from campaign delete\");\n\n      });\n    };\n\n    $scope.campaignActivateDeactivate = (campaignId, isActivate, campaignIndex) => {\n\n        let activateData = {\n            CampaignId : campaignId,\n            Activate   : isActivate,\n            MerchantToken : merchantToken\n        }\n        Campaign.activateDeactivate(activateData).then(response => {\n          let statusCode = response.FlikResponse.Status.StatusCode;\n          let statusMessage = response.FlikResponse.Status.StatusMessage;\n          let activateMessage = response.FlikResponse.Data.MerchantCampaign.ActiveStatus;\n\n          if(statusCode == 0){\n            $mdToast.show(\n              $mdToast.simple()\n                  .content(activateMessage)\n                  .position(\"top right\")\n                  .hideDelay(2700)\n            );\n\n          //$rootScope.allData.campaigns.list[campaignIndex].activate = isActivate;\n              $scope.allCampaigns[campaignIndex].activate = isActivate;\n\n          }else if (statusCode == 3) {\n\n              /**\n               * if we reach here merchantToken is no longer valid\n               * we boot user back to signin\n               *\n               * TODO: add modal to reauth without back to signin page\n               */\n              locker.driver(\"local\")\n                  .namespace(\"core\")\n                  .forget(\"merchantToken\");\n              $state.go(\"access.signin\");\n              console.group(\"and the status is \" + statusCode);\n              console.warn(response + \" token not valid - need to login again\");\n              console.info(\"bye -- see you soon\");\n              console.groupEnd();\n          }else {\n\n              $mdToast.show(\n                  $mdToast.simple()\n                      .content(statusMessage)\n                      .position(\"top right\")\n                      .hideDelay(2700)\n              );\n\n\n          }\n\n        }, error => {\n          $mdToast.show(\n            $mdToast.simple()\n            .content(\"Error in Activating and Deactivating\")\n            .position(\"top right\")\n            .hideDelay(2700)\n          );\n\n        });\n    };\n\n\n\n}]);\n"]}